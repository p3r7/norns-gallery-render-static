{"version":3,"sources":["norns_index/app.cljs"],"mappings":";AAgBA,AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,AAUA;;;;AAAA,AAAMA;AAAN,AAIE,AAACC,AAAAA,AAAAA;;AAEH;;;AAAA,AAAuBC;AAAvB,AAGE,AAACD,AAAAA,AAAAA;;AACD,AAAA,AAACE;;AAEH;;;;AAAA,AAAMF;AAAN,AAIE,AAAAG,AAAA,AAAoBE;AAApB,AAAA,AAAAF,AAAAA,AAACC,AAAAA,AAAAA;;AAMH;;;AAAA,AAAME,AAEHC,AAAUC;AAFb,AAGE,AAACC,AAAYF,AAAUC;;AAEzB;;;AAAA,AAAMJ,AAEHG;AAFH,AAGE,AAAAG,AAAc,AAACC,AAAAA,AAAAA;AAAf,AAAA,AAAAD;AAAA,AAAA,AAAAA,AAAWF;AAAX,AACE,AAACF,AAAMC,AAAUC;;AADnB;;;AAGF,AAAA,AAAMG;AAAN,AAGE,AAAA,AAACC","names":["norns-index.app/init","norns-index.app/mount-root","norns-index.app/on-reload","js/console.debug","G__58024","norns-index.app/mount-app-element","norns-index.views/main-view","norns-index.app/mount","component","el","reagent.dom.render","temp__5735__auto__","norns-index.app/app-element","goog.dom/getElement"],"sourcesContent":["(ns norns-index.app\n  (:require\n   ;; core\n   [clojure.edn :as edn]\n   [goog.dom :as gdom]\n   [norns-index.utils.core :refer [member? remove-nils]]\n\n   ;; react\n   [reagent.core :as r]\n   [reagent.dom :as rdom]\n\n   ;; app\n   [norns-index.views :as views]\n   ))\n\n\n(declare mount-root mount-app-element app-element\n         ;; views\n         main-view filter-panel\n         script-panel screenshot feature\n         script-category-section)\n\n\n\f\n;;  ENTRY POINT\n\n(defn init\n  \"Main entry point.\n  Called (only) on first page load.\"\n  []\n  (mount-root))\n\n(defn ^:dev/after-load on-reload\n  \"Called (only) when code gets reloaded by shadow-cljs.\"\n  []\n  (mount-root)\n  (js/console.debug \"code reloaded by shadow-cljs\"))\n\n(defn mount-root\n  \"Mount transpilled js code into #app dome element.\n  Gets called both at page load (`init`) and on automatic code reload by shadow-cljs (`on-reload`).\"\n  []\n  (mount-app-element [views/main-view]))\n\n\n\f\n;; HELPERS - DOM\n\n(defn mount\n  \"Mount and render hiccup COMPONENT on dom element EL.\"\n  [component el]\n  (rdom/render component el))\n\n(defn mount-app-element\n  \"Mount hiccup COMPONENT on dom element #app.\"\n  [component]\n  (when-let [el (app-element)]\n    (mount component el)))\n\n(defn app-element []\n  ;; NB: we often also see:\n  ;; (.getElementById js/document \"app\")\n  (gdom/getElement \"app\"))\n"]}